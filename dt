import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

import jakarta.xml.datatype.DatatypeConfigurationException;
import jakarta.xml.datatype.DatatypeFactory;
import jakarta.xml.datatype.XMLGregorianCalendar;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.MockedStatic;
import org.mockito.junit.jupiter.MockitoExtension;

import java.time.LocalDate;

@ExtendWith(MockitoExtension.class)
class DateUtilTest {

    @Test
    void testToXMLGregorianCalendar_Exception() throws Exception {
        // Arrange
        LocalDate testDate = LocalDate.of(2024, 2, 19);

        try (MockedStatic<DatatypeFactory> mockedStatic = mockStatic(DatatypeFactory.class)) {
            mockedStatic.when(DatatypeFactory::newInstance).thenThrow(new DatatypeConfigurationException("Mocked Exception"));

            // Act & Assert
            GenericException exception = assertThrows(GenericException.class, () -> 
                DateUtil.toXMLGregorianCalendar(testDate)
            );

            assertEquals("Error converting LocalDate to XMLGregorianCalendar", exception.getMessage());
        }
    }
}
