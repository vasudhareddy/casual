package com.wellsfargo.opq.service;

import com.wellsfargo.opq.model.OpSessionData;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.redis.core.RedisTemplate;
import org.springframework.stereotype.Service;

import java.util.Objects;
import java.util.concurrent.TimeUnit;
import java.util.LinkedHashMap;

@Service
public class RedisSessionService {

    public static final String SESSION = "SESSION";
    private static final int SESSION_TIMEOUT = 20; // in minutes

    private final RedisTemplate<Object, Object> redisTemplate;
    private final ObjectMapper objectMapper;

    @Autowired
    public RedisSessionService(RedisTemplate<Object, Object> redisTemplate, ObjectMapper objectMapper) {
        this.redisTemplate = redisTemplate;
        this.objectMapper = objectMapper;
    }

    /**
     * Store session data in Redis.
     */
    public void storeSessionData(String username, OpSessionData sessionData) {
        redisTemplate.opsForValue().set(SESSION + ":" + username, sessionData, SESSION_TIMEOUT, TimeUnit.MINUTES);
    }

    /**
     * Retrieve session data from Redis and convert to OpSessionData.
     */
    public OpSessionData getSessionData(String username) {
        Object redisObject = redisTemplate.opsForValue().get(SESSION + ":" + username);
        OpSessionData storedData = null;

        if (redisObject instanceof OpSessionData) {
            storedData = (OpSessionData) redisObject;
        } else if (redisObject instanceof LinkedHashMap) {
            // Convert from LinkedHashMap to OpSessionData
            storedData = objectMapper.convertValue(redisObject, OpSessionData.class);
        }

        // If null, create empty session object
        if (storedData == null) {
            storedData = new OpSessionData();
        }

        // Reset TTL
        storeSessionData(username, storedData);

        return storedData;
    }

    /**
     * Clear session data from Redis.
     */
    public void clearSessionData(String username) {
        redisTemplate.delete(SESSION + ":" + username);
    }
}
